/*
This code is based on a code I found by Josh Hawley. Check out the original code to understand the working of the functions. Josh has done a amazing job at it, I can't do it better. Check the flowchart for understanding the ummm... flow. Will Wheaton's law applies!

*/

#include "FPS_GT511C3.h"
#include "SoftwareSerial.h"
FPS_GT511C3 fps(4, 5); // (Arduino SS_RX = pin 4, Arduino SS_TX = pin 5)
int att[50]={0};
int ap=0;
int idref;
void Enroll();
void EnrollTeacher();

void setup() {

  Serial.begin(9600); //set up Arduino's hardware serial UART_RX

}

char* serialString()
{
  static char str[21]; // For strings of max length=20
  if (!Serial.available()) return NULL;
  delay(64); // wait for all characters to arrive
  memset(str,0,sizeof(str)); // clear str
  byte count=0;
  while (Serial.available())
  {
    char c=Serial.read();
    if (c>=32 && count<sizeof(str)-1)
    {
      str[count]=c;
      count++;
    }
  }
  str[count]='\0'; // make it a zero terminated string
  return str;
}

void loop() {
  
  fps.SetLED(true);
  fps.CaptureFinger(false);
  int m = fps.Identify1_N();
  if(m<10){
      
  fps.SetLED(false);
  Serial.println("What do you want to do?");
  Serial.println("1.Delete Fingerprint");
  Serial.println("2.Enroll Student");
  Serial.println("3.Attendance*");
  Serial.println("4.Transfer");
  Serial.println("5.Enroll Teacher");
  Serial.println("6.Master Reset");
  int flag;
  char a,b,x,y,z,w;
  flag=0;
  while(Serial.available()==0);
  a=Serial.read();
  Serial.println(a);
  int d=0;
  
  if(a=='1'){
    flag=1;
    while(flag){
      Serial.println("enter fingerprint to delete");
      fps.SetLED(true);
      while(fps.IsPressFinger()==0);
      fps.CaptureFinger(false);
    int id = fps.Identify1_N();
    Serial.println(id);
  fps.DeleteID(id);
  Serial.println("1.To delete another \n2.To exit");
  while(Serial.available()==0);
  if(Serial.available()>0)
  b=Serial.read();
  if(b=='2')
  flag--;
  }
  }
  
  else if(a=='2'){
    
    while(flag==0){
      fps.SetLED(true);
      Enroll();
      Serial.println("1.Add another");
      Serial.println("2.End Enrollment");
      lol:
      while(Serial.available()==0);
      if(Serial.available()>0)
      b=Serial.read();                   
      if(b=='1')
      continue;
      else if(b=='2')
      flag=1;
      else{
        Serial.println("Choose valid option");
      goto lol;
      }
      }
      
      }
    
    
  else if(a=='3'){
    
    int mast=1;
    
    while(mast){
    
    fps.SetLED(true);
    if (fps.IsPressFinger()){
    fps.CaptureFinger(false);
    int t = fps.Identify1_N();
    if (t<=10){
    
    Serial.println("Welcome Teacher ID ");
    Serial.print(t);  
    att[ap]=t;
    ap++;
    delay(2000); 
    while(flag==0){
      
      if (fps.IsPressFinger())
      {
        fps.CaptureFinger(false);
        int id = fps.Identify1_N();
        if (id <200) //<- change id value depending model you are using
        {
          
          idref=id;
          if(id<11)
          {
            flag++;
            Serial.println("Attendance Over");
            delay(5000);
          }
       else
          {   
          Serial.print("Verified ID:");
          Serial.println(id);
          delay(2000);
          }
      }
      else
      {//if unable to recognize
      Serial.println("Finger not found");
      }
      }
    if(idref!=201){  
    att[ap]=idref;
    idref=201;
    ap++;  
    }
    b=Serial.read();
    if(b=='x')
    flag++;
    mast=0;
    }  
  }
  }
  }
  }

  else if(a=='4'){
    for(int i=0;i<ap;i++)
    Serial.println(att[i]);
    ap=0;
    }

   else if(a=='5'){
    
 
    while(flag==0){
      fps.SetLED(true);
      EnrollTeacher();
      Serial.println("1.Add another");
      Serial.println("2.End Enrollment");
      lol2:
      while(Serial.available()==0);
      if(Serial.available()>0)
      b=Serial.read();                   
      if(b=='1')
      continue;
      else if(b=='2')
      flag=1;
      else{
        Serial.println("Choose valid option");
      goto lol2;
      
      }
      }
     
   }

    else if(a=='6'){
      
      for(int i=1;i<201;i++){
      fps.DeleteID(i);
      }
    }
      
}
}

void EnrollTeacher()
{
  int enrollid = 0;
  bool usedid = true;
  while (usedid == true)
  {
    usedid = fps.CheckEnrolled(enrollid);
    if (usedid==true) enrollid++;
  }
  if(enrollid>=10){
    Serial.println("Reserved spaces over. Please contact admin");
    return;
    }
  
  fps.EnrollStart(enrollid);

  // enroll
  Serial.print("Press finger to Enroll #");
  Serial.println(enrollid);
  while(fps.IsPressFinger() == false) delay(100);
  bool bret = fps.CaptureFinger(true);
  int iret = 0;
  if (bret != false)
  {
    Serial.println("Remove finger");
    fps.Enroll1(); 
    while(fps.IsPressFinger() == true) delay(100);
    Serial.println("Press same finger again");
    while(fps.IsPressFinger() == false) delay(100);
    bret = fps.CaptureFinger(true);
    if (bret != false)
    {
      Serial.println("Remove finger");
      fps.Enroll2();
      while(fps.IsPressFinger() == true) delay(100);
      Serial.println("Press same finger yet again");
      while(fps.IsPressFinger() == false) delay(100);
      bret = fps.CaptureFinger(true);
      if (bret != false)
      {
        Serial.println("Remove finger");
        iret = fps.Enroll3();
        if (iret == 0)
        {
          Serial.println("Enrolling Successful");
        }
        else
        {
          Serial.print("Enrolling Failed with error code:");
          Serial.println(iret);
        }
      }
      else Serial.println("Failed to capture third finger");
    }
    else Serial.println("Failed to capture second finger");
  }
  else Serial.println("Failed to capture first finger");
}
  
  
  
  
void Enroll()
{
  // Enroll test

  // find open enroll id
  int enrollid = 11;
  bool usedid = true;
  while (usedid == true)
  {
    usedid = fps.CheckEnrolled(enrollid);
    if (usedid==true) enrollid++;
  }
  fps.EnrollStart(enrollid);

  // enroll
  Serial.print("Press finger to Enroll #");
  Serial.println(enrollid);
  while(fps.IsPressFinger() == false) delay(100);
  bool bret = fps.CaptureFinger(true);
  int iret = 0;
  if (bret != false)
  {
    Serial.println("Remove finger");
    fps.Enroll1(); 
    while(fps.IsPressFinger() == true) delay(100);
    Serial.println("Press same finger again");
    while(fps.IsPressFinger() == false) delay(100);
    bret = fps.CaptureFinger(true);
    if (bret != false)
    {
      Serial.println("Remove finger");
      fps.Enroll2();
      while(fps.IsPressFinger() == true) delay(100);
      Serial.println("Press same finger yet again");
      while(fps.IsPressFinger() == false) delay(100);
      bret = fps.CaptureFinger(true);
      if (bret != false)
      {
        Serial.println("Remove finger");
        iret = fps.Enroll3();
        if (iret == 0)
        {
          Serial.println("Enrolling Successful");
        }
        else
        {
          Serial.print("Enrolling Failed with error code:");
          Serial.println(iret);
        }
      }
      else Serial.println("Failed to capture third finger");
    }
    else Serial.println("Failed to capture second finger");
  }
  else Serial.println("Failed to capture first finger");
}
